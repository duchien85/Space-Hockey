import com.github.spotbugs.SpotBugsTask

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
    }
}

plugins {
    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)

    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"
}

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 13

repositories {
    mavenCentral()
}
allprojects {
    version = '1.0'
    ext {
        appName = "my-gdx-game"
        gdxVersion = '1.9.10'
        roboVMVersion = '2.3.8'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

test {
    useJUnitPlatform()
    jacoco {
        enabled = true
        includes = ['*']
    }
}

dependencies {
    testCompile "org.mockito:mockito-core:1.+"
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
    implementation 'junit:junit:4.12'
}

project(":desktop") {
    apply plugin: "java-library"
    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"

    }
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.cse.sem.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

checkstyle {
    toolVersion "8.25"
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

pmd {
    incrementalAnalysis = true
}

spotbugs {
    toolVersion = '4.0.0-beta4'
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

project(":core") {

    apply plugin: "java-library"
    apply plugin: "pmd"
    apply plugin: "checkstyle"
    apply plugin: "jacoco"

    dependencies {
        testCompile "junit:junit:4.12"
        testCompile "org.mockito:mockito-core:2.2.29"

        testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testCompile "com.badlogicgames.gdx:gdx:$gdxVersion"
        testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        // box2d dependencies if necessary
        testCompile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        testCompile  "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
        compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
        implementation 'junit:junit:4.12'
        testCompile "org.mockito:mockito-core:1.+"
        testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    }

    test {
        useJUnitPlatform()
        jacoco {
            includes = ['*']
        }
        finalizedBy jacocoTestReport
        jacocoTestReport {
            afterEvaluate {
                classDirectories.setFrom(files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: '**/screens/**')
                }))
            }
        }
    }
}
